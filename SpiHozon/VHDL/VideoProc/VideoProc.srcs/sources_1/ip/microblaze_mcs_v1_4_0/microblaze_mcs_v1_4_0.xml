<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>microblaze_mcs_v1_4_0</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>IO_BUS</spirit:name>
      <spirit:displayName>IO_BUS</spirit:displayName>
      <spirit:description>MicroBlaze MCS IO Bus Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="embedded" spirit:name="xil_mcsio_bus" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="embedded" spirit:name="xil_mcsio_bus_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Addr_Strobe</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Addr_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Read_Strobe</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Read_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Write_Strobe</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Write_Strobe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Byte_Enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Byte_Enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Write_Data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Write_Data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Read_Data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Read_Data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>IO_Ready</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>IO_Ready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>TRACE</spirit:name>
      <spirit:displayName>TRACE</spirit:displayName>
      <spirit:description>MicroBlaze MCS Trace Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="embedded" spirit:name="xil_mbtrace" spirit:version="2.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="embedded" spirit:name="xil_mbtrace_rtl" spirit:version="2.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Instruction</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Instruction</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Valid_Instr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Valid_Instr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_PC</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_PC</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Reg_Write</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Reg_Write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Reg_Addr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Reg_Addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_MSR_Reg</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_MSR_Reg</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_New_Reg_Value</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_New_Reg_Value</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Jump_Taken</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Jump_Taken</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Delay_Slot</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Delay_Slot</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Access</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Access</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Read</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Write</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Write_Value</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Write_Value</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_Data_Byte_Enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_Data_Byte_Enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>Trace_MB_Halted</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>Trace_MB_Halted</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:presence>optional</xilinx:presence>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_miscfiles</spirit:name>
        <spirit:displayName>Miscellaneous</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:misc.files</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_miscfiles_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>3644908354</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagesynthesis</spirit:name>
        <spirit:displayName>Synthesis</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagesynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>3644908354</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguageinstantiationtemplate</spirit:name>
        <spirit:displayName>Instantiation Template</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.template</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>3644908354</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagebehavioralsimulation</spirit:name>
        <spirit:displayName>Simulation</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>3644908354</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>Clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>Reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Addr_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Read_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Write_Strobe</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Byte_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">3</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Write_Data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Read_Data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>IO_Ready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_IO_BUS&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Rx</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_RX&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Tx</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_UART_TX&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>UART_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_RX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_TX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT1_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT1&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT2_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT2&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT3_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT3&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>FIT4_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_FIT4&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT1_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT1&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT2_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT2&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT3_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT3&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:bitStringLength="1">0x0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_PRESCALER&apos;)) = 9)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_INTERRUPT&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>PIT4_Toggle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_PIT4&apos;)) = 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO1_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO1&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO2_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO2&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO3_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO3&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPO4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPO4_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPO4&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI1_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI1&apos;)) > 0">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI2_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI2&apos;)) > 0">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI3_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI3&apos;)) > 0">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_SIZE&apos;)) - 1)">31</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>GPI4_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_GPI4&apos;)) > 0">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>INTC_Interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_INTR_SIZE&apos;)) - 1)">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>INTC_IRQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_RX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_TX_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT1_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT2_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT3_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIT4_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT1_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT2_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT3_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PIT4_INTERRUPT&apos;)) = 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI1_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI2_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI3_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_GPI4_INTERRUPT&apos;)) > 0) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_INTC_USE_EXT_INTR&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Instruction</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Valid_Instr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_PC</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Reg_Write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Reg_Addr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">4</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_MSR_Reg</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">14</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_New_Reg_Value</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Jump_Taken</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Delay_Slot</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Access</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Read</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Write_Value</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_Data_Byte_Enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="immediate">0</spirit:left>
            <spirit:right spirit:format="long" spirit:resolve="immediate">3</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>Trace_MB_Halted</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TRACE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="string">
        <spirit:name>C_FAMILY</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FAMILY">virtex5</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_XDEVICE</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_XDEVICE">xc5vlx50t</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_XPACKAGE</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_XPACKAGE">ff1136</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_XSPEEDGRADE</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_XSPEEDGRADE">-1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_MICROBLAZE_INSTANCE</spirit:name>
        <spirit:displayName>C_MICROBLAZE_INSTANCE</spirit:displayName>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MICROBLAZE_INSTANCE">microblaze_0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>C_PATH</spirit:name>
        <spirit:displayName>C_PATH</spirit:displayName>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PATH">mb/U0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FREQ</spirit:name>
        <spirit:displayName>C_FREQ</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FREQ">100000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_MEMSIZE</spirit:name>
        <spirit:displayName>C_MEMSIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MEMSIZE" spirit:choiceRef="choices_3">8192</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_DEBUG_ENABLED</spirit:name>
        <spirit:displayName>C_DEBUG_ENABLED</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEBUG_ENABLED" spirit:choiceRef="choices_1">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_JTAG_CHAIN</spirit:name>
        <spirit:displayName>Debug JTAG User-defined Register</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_JTAG_CHAIN" spirit:choiceRef="choices_0">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_TRACE</spirit:name>
        <spirit:displayName>C_TRACE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TRACE" spirit:choiceRef="choices_2">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_IO_BUS</spirit:name>
        <spirit:displayName>C_USE_IO_BUS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_IO_BUS" spirit:choiceRef="choices_4">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_UART_RX</spirit:name>
        <spirit:displayName>C_USE_UART_RX</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_UART_RX" spirit:choiceRef="choices_5">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_UART_TX</spirit:name>
        <spirit:displayName>C_USE_UART_TX</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_UART_TX" spirit:choiceRef="choices_6">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_BAUDRATE</spirit:name>
        <spirit:displayName>C_UART_BAUDRATE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_BAUDRATE" spirit:choiceRef="choices_7">9600</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_DATA_BITS</spirit:name>
        <spirit:displayName>C_UART_DATA_BITS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_DATA_BITS" spirit:minimum="5" spirit:maximum="8" spirit:rangeType="long">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_USE_PARITY</spirit:name>
        <spirit:displayName>C_UART_USE_PARITY</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_USE_PARITY" spirit:choiceRef="choices_9">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_ODD_PARITY</spirit:name>
        <spirit:displayName>C_UART_ODD_PARITY</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_ODD_PARITY" spirit:choiceRef="choices_10">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_RX_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_RX_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_RX_INTERRUPT" spirit:choiceRef="choices_11">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_TX_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_TX_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_TX_INTERRUPT" spirit:choiceRef="choices_12">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_ERROR_INTERRUPT</spirit:name>
        <spirit:displayName>C_UART_ERROR_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_ERROR_INTERRUPT" spirit:choiceRef="choices_13">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_UART_PROG_BAUDRATE</spirit:name>
        <spirit:displayName>C_UART_PROG_BAUDRATE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_UART_PROG_BAUDRATE" spirit:choiceRef="choices_8">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT1</spirit:name>
        <spirit:displayName>C_USE_FIT1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT1" spirit:choiceRef="choices_14">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT1_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT1_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT1_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT1_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT1_INTERRUPT" spirit:choiceRef="choices_15">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT2</spirit:name>
        <spirit:displayName>C_USE_FIT2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT2" spirit:choiceRef="choices_16">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT2_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT2_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT2_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT2_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT2_INTERRUPT" spirit:choiceRef="choices_17">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT3</spirit:name>
        <spirit:displayName>C_USE_FIT3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT3" spirit:choiceRef="choices_18">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT3_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT3_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT3_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT3_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT3_INTERRUPT" spirit:choiceRef="choices_19">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_FIT4</spirit:name>
        <spirit:displayName>C_USE_FIT4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_FIT4" spirit:choiceRef="choices_20">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT4_No_CLOCKS</spirit:name>
        <spirit:displayName>C_FIT4_No_CLOCKS</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT4_No_CLOCKS" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_FIT4_INTERRUPT</spirit:name>
        <spirit:displayName>C_FIT4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FIT4_INTERRUPT" spirit:choiceRef="choices_21">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT1</spirit:name>
        <spirit:displayName>C_USE_PIT1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT1" spirit:choiceRef="choices_22">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_SIZE</spirit:name>
        <spirit:displayName>C_PIT1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_READABLE</spirit:name>
        <spirit:displayName>C_PIT1_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_READABLE" spirit:choiceRef="choices_23">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT1_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_PRESCALER" spirit:choiceRef="choices_24">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT1_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT1_INTERRUPT" spirit:choiceRef="choices_25">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT2</spirit:name>
        <spirit:displayName>C_USE_PIT2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT2" spirit:choiceRef="choices_26">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_SIZE</spirit:name>
        <spirit:displayName>C_PIT2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_READABLE</spirit:name>
        <spirit:displayName>C_PIT2_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_READABLE" spirit:choiceRef="choices_27">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT2_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_PRESCALER" spirit:choiceRef="choices_28">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT2_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT2_INTERRUPT" spirit:choiceRef="choices_29">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT3</spirit:name>
        <spirit:displayName>C_USE_PIT3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT3" spirit:choiceRef="choices_30">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_SIZE</spirit:name>
        <spirit:displayName>C_PIT3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_READABLE</spirit:name>
        <spirit:displayName>C_PIT3_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_READABLE" spirit:choiceRef="choices_31">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT3_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_PRESCALER" spirit:choiceRef="choices_32">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT3_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT3_INTERRUPT" spirit:choiceRef="choices_33">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_PIT4</spirit:name>
        <spirit:displayName>C_USE_PIT4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_PIT4" spirit:choiceRef="choices_34">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_SIZE</spirit:name>
        <spirit:displayName>C_PIT4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_READABLE</spirit:name>
        <spirit:displayName>C_PIT4_READABLE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_READABLE" spirit:choiceRef="choices_35">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_PRESCALER</spirit:name>
        <spirit:displayName>C_PIT4_PRESCALER</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_PRESCALER" spirit:choiceRef="choices_36">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_PIT4_INTERRUPT</spirit:name>
        <spirit:displayName>C_PIT4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIT4_INTERRUPT" spirit:choiceRef="choices_37">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO1</spirit:name>
        <spirit:displayName>C_USE_GPO1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO1" spirit:choiceRef="choices_38">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO1_SIZE</spirit:name>
        <spirit:displayName>C_GPO1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO1_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO1_INIT</spirit:name>
        <spirit:displayName>C_GPO1_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO1_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO2</spirit:name>
        <spirit:displayName>C_USE_GPO2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO2" spirit:choiceRef="choices_39">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO2_SIZE</spirit:name>
        <spirit:displayName>C_GPO2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO2_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO2_INIT</spirit:name>
        <spirit:displayName>C_GPO2_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO2_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO3</spirit:name>
        <spirit:displayName>C_USE_GPO3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO3" spirit:choiceRef="choices_40">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO3_SIZE</spirit:name>
        <spirit:displayName>C_GPO3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO3_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO3_INIT</spirit:name>
        <spirit:displayName>C_GPO3_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO3_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPO4</spirit:name>
        <spirit:displayName>C_USE_GPO4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPO4" spirit:choiceRef="choices_41">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPO4_SIZE</spirit:name>
        <spirit:displayName>C_GPO4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO4_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(31 downto 0)">
        <spirit:name>C_GPO4_INIT</spirit:name>
        <spirit:displayName>C_GPO4_INIT</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPO4_INIT" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI1</spirit:name>
        <spirit:displayName>C_USE_GPI1</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI1" spirit:choiceRef="choices_42">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI1_SIZE</spirit:name>
        <spirit:displayName>C_GPI1_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI1_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI1_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI1_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI1_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI2</spirit:name>
        <spirit:displayName>C_USE_GPI2</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI2" spirit:choiceRef="choices_43">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI2_SIZE</spirit:name>
        <spirit:displayName>C_GPI2_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI2_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI2_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI2_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI2_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI3</spirit:name>
        <spirit:displayName>C_USE_GPI3</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI3" spirit:choiceRef="choices_44">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI3_SIZE</spirit:name>
        <spirit:displayName>C_GPI3_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI3_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI3_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI3_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI3_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_USE_GPI4</spirit:name>
        <spirit:displayName>C_USE_GPI4</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_USE_GPI4" spirit:choiceRef="choices_45">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI4_SIZE</spirit:name>
        <spirit:displayName>C_GPI4_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI4_SIZE" spirit:minimum="1" spirit:maximum="32" spirit:rangeType="long">32</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_GPI4_INTERRUPT</spirit:name>
        <spirit:displayName>C_GPI4_INTERRUPT</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GPI4_INTERRUPT" spirit:minimum="0" spirit:maximum="3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_INTC_USE_EXT_INTR</spirit:name>
        <spirit:displayName>C_INTC_USE_EXT_INTR</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_USE_EXT_INTR" spirit:choiceRef="choices_46">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_INTC_INTR_SIZE</spirit:name>
        <spirit:displayName>C_INTC_INTR_SIZE</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_INTR_SIZE" spirit:minimum="1" spirit:maximum="16" spirit:rangeType="long">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(15 downto 0)">
        <spirit:name>C_INTC_LEVEL_EDGE</spirit:name>
        <spirit:displayName>C_INTC_LEVEL_EDGE</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_LEVEL_EDGE" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="std_logic_vector(15 downto 0)">
        <spirit:name>C_INTC_POSITIVE</spirit:name>
        <spirit:displayName>C_INTC_POSITIVE</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INTC_POSITIVE" spirit:bitStringLength="16">0xFFFF</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choices_0</spirit:name>
      <spirit:enumeration spirit:text="USER1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="USER2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="USER3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="USER4">4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_1</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_2</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_3</spirit:name>
      <spirit:enumeration spirit:text="4KB">4096</spirit:enumeration>
      <spirit:enumeration spirit:text="8KB">8192</spirit:enumeration>
      <spirit:enumeration spirit:text="16KB">16384</spirit:enumeration>
      <spirit:enumeration spirit:text="32KB">32768</spirit:enumeration>
      <spirit:enumeration spirit:text="64KB">65536</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_4</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_5</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_6</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_7</spirit:name>
      <spirit:enumeration spirit:text="110">110</spirit:enumeration>
      <spirit:enumeration spirit:text="300">300</spirit:enumeration>
      <spirit:enumeration spirit:text="1200">1200</spirit:enumeration>
      <spirit:enumeration spirit:text="2400">2400</spirit:enumeration>
      <spirit:enumeration spirit:text="4800">4800</spirit:enumeration>
      <spirit:enumeration spirit:text="9600">9600</spirit:enumeration>
      <spirit:enumeration spirit:text="19200">19200</spirit:enumeration>
      <spirit:enumeration spirit:text="38400">38400</spirit:enumeration>
      <spirit:enumeration spirit:text="57600">57600</spirit:enumeration>
      <spirit:enumeration spirit:text="115200">115200</spirit:enumeration>
      <spirit:enumeration spirit:text="128000">128000</spirit:enumeration>
      <spirit:enumeration spirit:text="230400">230400</spirit:enumeration>
      <spirit:enumeration spirit:text="460800">460800</spirit:enumeration>
      <spirit:enumeration spirit:text="921600">921600</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_8</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_9</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_10</spirit:name>
      <spirit:enumeration spirit:text="Even">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Odd">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_11</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_12</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_13</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_14</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_15</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_16</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_17</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_18</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_19</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_20</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_21</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_22</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_23</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_24</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_25</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_26</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_27</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_28</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_29</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_30</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_31</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_32</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_33</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_34</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_35</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_36</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_37</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_38</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_39</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_40</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_41</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_42</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_43</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_44</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_45</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_46</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_47</spirit:name>
      <spirit:enumeration spirit:text="USER1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="USER2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="USER3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="USER4">4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_48</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_49</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_50</spirit:name>
      <spirit:enumeration spirit:text="4KB">4096</spirit:enumeration>
      <spirit:enumeration spirit:text="8KB">8192</spirit:enumeration>
      <spirit:enumeration spirit:text="16KB">16384</spirit:enumeration>
      <spirit:enumeration spirit:text="32KB">32768</spirit:enumeration>
      <spirit:enumeration spirit:text="64KB">65536</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_51</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_52</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_53</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_54</spirit:name>
      <spirit:enumeration spirit:text="110">110</spirit:enumeration>
      <spirit:enumeration spirit:text="300">300</spirit:enumeration>
      <spirit:enumeration spirit:text="1200">1200</spirit:enumeration>
      <spirit:enumeration spirit:text="2400">2400</spirit:enumeration>
      <spirit:enumeration spirit:text="4800">4800</spirit:enumeration>
      <spirit:enumeration spirit:text="9600">9600</spirit:enumeration>
      <spirit:enumeration spirit:text="19200">19200</spirit:enumeration>
      <spirit:enumeration spirit:text="38400">38400</spirit:enumeration>
      <spirit:enumeration spirit:text="57600">57600</spirit:enumeration>
      <spirit:enumeration spirit:text="115200">115200</spirit:enumeration>
      <spirit:enumeration spirit:text="128000">128000</spirit:enumeration>
      <spirit:enumeration spirit:text="230400">230400</spirit:enumeration>
      <spirit:enumeration spirit:text="460800">460800</spirit:enumeration>
      <spirit:enumeration spirit:text="921600">921600</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_55</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_56</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_57</spirit:name>
      <spirit:enumeration spirit:text="Even">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Odd">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_58</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_59</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_60</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_61</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_62</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_63</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_64</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_65</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_66</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_67</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_68</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_69</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_70</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_71</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_72</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_73</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_74</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_75</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_76</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_77</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_78</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_79</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT4">8</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_80</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_81</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_82</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_83</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT1">1</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT3">3</spirit:enumeration>
      <spirit:enumeration spirit:text="FIT4">4</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT1">5</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT2">6</spirit:enumeration>
      <spirit:enumeration spirit:text="PIT3">7</spirit:enumeration>
      <spirit:enumeration spirit:text="External">9</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_84</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_85</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_86</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_87</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_88</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_89</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_90</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_91</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_92</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_93</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_94</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_95</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_96</spirit:name>
      <spirit:enumeration spirit:text="None">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Both Edges">1</spirit:enumeration>
      <spirit:enumeration spirit:text="Rising Edge">2</spirit:enumeration>
      <spirit:enumeration spirit:text="Falling Edge">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choices_97</spirit:name>
      <spirit:enumeration spirit:text="false">0</spirit:enumeration>
      <spirit:enumeration spirit:text="true">1</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_miscfiles_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.xco</spirit:name>
        <spirit:userFileType>xco</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0/mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0/microblaze_mcs_setup.tcl</spirit:name>
        <spirit:fileType>tclSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0/system_template.tcl</spirit:name>
        <spirit:fileType>tclSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>mb_bootloop_le.elf</spirit:name>
        <spirit:userFileType>elf</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_setup.tcl</spirit:name>
        <spirit:fileType>tclSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.bmm</spirit:name>
        <spirit:userFileType>bmm</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0_sdk.xml</spirit:name>
        <spirit:userFileType>xml</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagesynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.ngc</spirit:name>
        <spirit:userFileType>ngc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.veo</spirit:name>
        <spirit:userFileType>verilogTemplate</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>microblaze_mcs_v1_4_0.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>MicroBlaze Micro Controller System (MCS) is a light-weight general purpose micro controller system, based on the MicroBlaze processor. It is primarily intended for simple control applications, where a hardware solution would be less flexible and more difficult to implement. Software development with the Xilinx Software Development Kit (SDK) is supported, including a software driver for the peripherals. Debugging is available either via SDK or directly with the Xilinx Microprocessor Debugger.

The MCS consists of the processor itself, local memory with sizes ranging from 4KB to 64KB, up to 4 Fixed Interval Timers, up to 4 Programmable Interval Timers, up to 4 32-bit General Purpose Output ports, up to 4 32-bit General Purpose Input ports, and an Interrupt Controller with up to 16 external interrupt inputs.
</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>JTAG_CHAIN</spirit:name>
      <spirit:displayName>Debug JTAG User-defined Register</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.JTAG_CHAIN" spirit:choiceRef="choices_47" spirit:order="1000" spirit:configGroups="1 NoDisplay">USER2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MICROBLAZE_INSTANCE</spirit:name>
      <spirit:displayName>MicroBlaze Instance Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.MICROBLAZE_INSTANCE" spirit:order="1010" spirit:configGroups="1 NoDisplay">microblaze_mcs_v1_4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PATH</spirit:name>
      <spirit:displayName>Instance Hierarchical Design Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PATH" spirit:order="1020" spirit:configGroups="1 NoDisplay">mcs_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FREQ</spirit:name>
      <spirit:displayName>Input Clock Frequency (MHz)</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FREQ" spirit:order="1030" spirit:configGroups="1 System">50.0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DEBUG_ENABLED</spirit:name>
      <spirit:displayName>Enable Debug Support</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.DEBUG_ENABLED" spirit:choiceRef="choices_48" spirit:order="1060" spirit:configGroups="1 System">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TRACE</spirit:name>
      <spirit:displayName>Enable MicroBlaze Trace Bus</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TRACE" spirit:choiceRef="choices_49" spirit:order="1070" spirit:configGroups="1 System">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MEMSIZE</spirit:name>
      <spirit:displayName>Memory Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.MEMSIZE" spirit:choiceRef="choices_50" spirit:order="1040" spirit:configGroups="1 System">16KB</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_IO_BUS</spirit:name>
      <spirit:displayName>Enable IO Bus</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_IO_BUS" spirit:choiceRef="choices_51" spirit:order="1050" spirit:configGroups="1 System">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_UART_RX</spirit:name>
      <spirit:displayName>Enable Receiver</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_UART_RX" spirit:choiceRef="choices_52" spirit:order="2000" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_UART_TX</spirit:name>
      <spirit:displayName>Enable Transmitter</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_UART_TX" spirit:choiceRef="choices_53" spirit:order="2100" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_BAUDRATE</spirit:name>
      <spirit:displayName>Define Baud Rate</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_BAUDRATE" spirit:choiceRef="choices_54" spirit:order="2200" spirit:configGroups="2 UART">9600</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_PROG_BAUDRATE</spirit:name>
      <spirit:displayName>Programmable Baud Rate</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_PROG_BAUDRATE" spirit:choiceRef="choices_55" spirit:order="2300" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_DATA_BITS</spirit:name>
      <spirit:displayName>Number of Data Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_DATA_BITS" spirit:order="2400" spirit:configGroups="2 UART" spirit:minimum="5" spirit:maximum="8">8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_USE_PARITY</spirit:name>
      <spirit:displayName>Use Parity</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_USE_PARITY" spirit:choiceRef="choices_56" spirit:order="2500" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_ODD_PARITY</spirit:name>
      <spirit:displayName>Even or Odd Parity</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_ODD_PARITY" spirit:choiceRef="choices_57" spirit:order="2600" spirit:configGroups="2 UART">Even</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_RX_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Receive Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_RX_INTERRUPT" spirit:choiceRef="choices_58" spirit:order="2700" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_TX_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Transmit Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_TX_INTERRUPT" spirit:choiceRef="choices_59" spirit:order="2800" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>UART_ERROR_INTERRUPT</spirit:name>
      <spirit:displayName>Implement Error Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.UART_ERROR_INTERRUPT" spirit:choiceRef="choices_60" spirit:order="2900" spirit:configGroups="2 UART">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT1</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT1" spirit:choiceRef="choices_61" spirit:order="3001" spirit:configGroups="3 FIT1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT1_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT1_No_CLOCKS" spirit:order="3002" spirit:configGroups="3 FIT1" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT1_INTERRUPT" spirit:choiceRef="choices_62" spirit:order="3005" spirit:configGroups="3 FIT1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT2</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT2" spirit:choiceRef="choices_63" spirit:order="3101" spirit:configGroups="3 FIT2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT2_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT2_No_CLOCKS" spirit:order="3102" spirit:configGroups="3 FIT2" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT2_INTERRUPT" spirit:choiceRef="choices_64" spirit:order="3105" spirit:configGroups="3 FIT2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT3</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT3" spirit:choiceRef="choices_65" spirit:order="3201" spirit:configGroups="3 FIT3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT3_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT3_No_CLOCKS" spirit:order="3202" spirit:configGroups="3 FIT3" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT3_INTERRUPT" spirit:choiceRef="choices_66" spirit:order="3205" spirit:configGroups="3 FIT3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_FIT4</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_FIT4" spirit:choiceRef="choices_67" spirit:order="3301" spirit:configGroups="3 FIT4">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT4_No_CLOCKS</spirit:name>
      <spirit:displayName>Number of Clocks Between Strobes</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT4_No_CLOCKS" spirit:order="3302" spirit:configGroups="3 FIT4" spirit:minimum="3" spirit:maximum="2147483647">6216</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIT4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIT4_INTERRUPT" spirit:choiceRef="choices_68" spirit:order="3305" spirit:configGroups="3 FIT4">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT1</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT1" spirit:choiceRef="choices_69" spirit:order="4001" spirit:configGroups="4 PIT1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_SIZE" spirit:order="4002" spirit:configGroups="4 PIT1" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_READABLE" spirit:choiceRef="choices_70" spirit:order="4003" spirit:configGroups="4 PIT1">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_PRESCALER" spirit:choiceRef="choices_71" spirit:order="4004" spirit:configGroups="4 PIT1">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT1_INTERRUPT" spirit:choiceRef="choices_72" spirit:order="4008" spirit:configGroups="4 PIT1">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT2</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT2" spirit:choiceRef="choices_73" spirit:order="4101" spirit:configGroups="4 PIT2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_SIZE" spirit:order="4102" spirit:configGroups="4 PIT2" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_READABLE" spirit:choiceRef="choices_74" spirit:order="4103" spirit:configGroups="4 PIT2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_PRESCALER" spirit:choiceRef="choices_75" spirit:order="4104" spirit:configGroups="4 PIT2">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT2_INTERRUPT" spirit:choiceRef="choices_76" spirit:order="4108" spirit:configGroups="4 PIT2">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT3</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT3" spirit:choiceRef="choices_77" spirit:order="4201" spirit:configGroups="4 PIT3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_SIZE" spirit:order="4202" spirit:configGroups="4 PIT3" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_READABLE" spirit:choiceRef="choices_78" spirit:order="4203" spirit:configGroups="4 PIT3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_PRESCALER" spirit:choiceRef="choices_79" spirit:order="4204" spirit:configGroups="4 PIT3">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT3_INTERRUPT" spirit:choiceRef="choices_80" spirit:order="4208" spirit:configGroups="4 PIT3">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_PIT4</spirit:name>
      <spirit:displayName>Use Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_PIT4" spirit:choiceRef="choices_81" spirit:order="4301" spirit:configGroups="4 PIT4">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits for Timer</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_SIZE" spirit:order="4302" spirit:configGroups="4 PIT4" spirit:minimum="1" spirit:maximum="32">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_READABLE</spirit:name>
      <spirit:displayName>Shall Counter Value Be Readable</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_READABLE" spirit:choiceRef="choices_82" spirit:order="4303" spirit:configGroups="4 PIT4">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_PRESCALER</spirit:name>
      <spirit:displayName>Define Prescaler</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_PRESCALER" spirit:choiceRef="choices_83" spirit:order="4304" spirit:configGroups="4 PIT4">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PIT4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PIT4_INTERRUPT" spirit:choiceRef="choices_84" spirit:order="4308" spirit:configGroups="4 PIT4">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO1</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO1" spirit:choiceRef="choices_85" spirit:order="5000" spirit:configGroups="5 GPO1">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO1_SIZE" spirit:order="5001" spirit:configGroups="5 GPO1" spirit:minimum="1" spirit:maximum="32">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO1_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO1_INIT" spirit:order="5002" spirit:configGroups="5 GPO1" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO2</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO2" spirit:choiceRef="choices_86" spirit:order="5100" spirit:configGroups="5 GPO2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO2_SIZE" spirit:order="5101" spirit:configGroups="5 GPO2" spirit:minimum="1" spirit:maximum="32">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO2_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO2_INIT" spirit:order="5102" spirit:configGroups="5 GPO2" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO3</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO3" spirit:choiceRef="choices_87" spirit:order="5200" spirit:configGroups="5 GPO3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO3_SIZE" spirit:order="5201" spirit:configGroups="5 GPO3" spirit:minimum="1" spirit:maximum="32">26</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO3_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO3_INIT" spirit:order="5202" spirit:configGroups="5 GPO3" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPO4</spirit:name>
      <spirit:displayName>Use GPO</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPO4" spirit:choiceRef="choices_88" spirit:order="5300" spirit:configGroups="5 GPO4">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO4_SIZE" spirit:order="5301" spirit:configGroups="5 GPO4" spirit:minimum="1" spirit:maximum="32">3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPO4_INIT</spirit:name>
      <spirit:displayName>Initial Value of GPO</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.GPO4_INIT" spirit:order="5302" spirit:configGroups="5 GPO4" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI1</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI1" spirit:choiceRef="choices_89" spirit:order="6000" spirit:configGroups="6 GPI1">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI1_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI1_SIZE" spirit:order="6001" spirit:configGroups="6 GPI1" spirit:minimum="1" spirit:maximum="32">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI1_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI1_INTERRUPT" spirit:choiceRef="choices_90" spirit:order="6002" spirit:configGroups="6 GPI1">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI2</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI2" spirit:choiceRef="choices_91" spirit:order="6100" spirit:configGroups="6 GPI2">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI2_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI2_SIZE" spirit:order="6101" spirit:configGroups="6 GPI2" spirit:minimum="1" spirit:maximum="32">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI2_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI2_INTERRUPT" spirit:choiceRef="choices_92" spirit:order="6102" spirit:configGroups="6 GPI2">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI3</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI3" spirit:choiceRef="choices_93" spirit:order="6200" spirit:configGroups="6 GPI3">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI3_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI3_SIZE" spirit:order="6201" spirit:configGroups="6 GPI3" spirit:minimum="1" spirit:maximum="32">21</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI3_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI3_INTERRUPT" spirit:choiceRef="choices_94" spirit:order="6202" spirit:configGroups="6 GPI3">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_GPI4</spirit:name>
      <spirit:displayName>Use GPI</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_GPI4" spirit:choiceRef="choices_95" spirit:order="6300" spirit:configGroups="6 GPI4">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI4_SIZE</spirit:name>
      <spirit:displayName>Number of Bits</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI4_SIZE" spirit:order="6301" spirit:configGroups="6 GPI4" spirit:minimum="1" spirit:maximum="32">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GPI4_INTERRUPT</spirit:name>
      <spirit:displayName>Generate Interrupt</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.GPI4_INTERRUPT" spirit:choiceRef="choices_96" spirit:order="6302" spirit:configGroups="6 GPI4">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_USE_EXT_INTR</spirit:name>
      <spirit:displayName>Use External Interrupts</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_USE_EXT_INTR" spirit:choiceRef="choices_97" spirit:order="7000" spirit:configGroups="7 Interrupt">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_INTR_SIZE</spirit:name>
      <spirit:displayName>Number of External Inputs</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_INTR_SIZE" spirit:order="7100" spirit:configGroups="7 Interrupt" spirit:minimum="1" spirit:maximum="16">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_LEVEL_EDGE</spirit:name>
      <spirit:displayName>Level or Edge of External Interrupts</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_LEVEL_EDGE" spirit:order="7200" spirit:configGroups="7 Interrupt" spirit:bitStringLength="16">0x0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INTC_POSITIVE</spirit:name>
      <spirit:displayName>Positive or Negative External Interrupts</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.INTC_POSITIVE" spirit:order="7300" spirit:configGroups="7 Interrupt" spirit:bitStringLength="16">0xFFFF</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">microblaze_mcs_v1_4_0</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:taxonomies>
        <xilinx:taxonomy>/Embedded Processing/Processor</xilinx:taxonomy>
      </xilinx:taxonomies>
      <xilinx:displayName>MicroBlaze MCS</xilinx:displayName>
      <xilinx:upgrades>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.0</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.2</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.3</xilinx:canUpgradeFrom>
      </xilinx:upgrades>
      <xilinx:coreCreationDateTime>2014-04-28T13:38:51</xilinx:coreCreationDateTime>
    </xilinx:coreExtensions>
    <xilinx:coreProperties>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aspartan3</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aspartan3a</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aspartan3adsp</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aspartan3e</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aspartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qrvirtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qrvirtex5</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qspartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qspartan6l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex5</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan3</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan3a</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan3adsp</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan3an</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan3e</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">spartan6l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex5</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex6l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:customization>
        <xilinx:customizer>Spirit</xilinx:customizer>
        <xilinx:elaborator>Sim</xilinx:elaborator>
        <xilinx:customizationTarget>microblaze_mcs_v1.4.class</xilinx:customizationTarget>
        <xilinx:upgrades>
          <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.0</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.2</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:microblaze_mcs:1.3</xilinx:canUpgradeFrom>
        </xilinx:upgrades>
      </xilinx:customization>
      <xilinx:generation>
        <xilinx:generationFlow>Spirit</xilinx:generationFlow>
        <xilinx:deliverSimulationModel>true</xilinx:deliverSimulationModel>
        <xilinx:forceStructuralVhdlModel>true</xilinx:forceStructuralVhdlModel>
        <xilinx:forceStructuralVerilogModel>true</xilinx:forceStructuralVerilogModel>
        <xilinx:keepCfamilyInCoreWrapperHdl>true</xilinx:keepCfamilyInCoreWrapperHdl>
      </xilinx:generation>
      <xilinx:licensing/>
      <xilinx:display>
        <xilinx:displayName>MicroBlaze MCS</xilinx:displayName>
        <xilinx:ipType>Spirit</xilinx:ipType>
        <xilinx:coreCreationDateTime>2014-04-28T13:38:51</xilinx:coreCreationDateTime>
        <xilinx:taxonomies>
          <xilinx:taxonomy>/Embedded Processing/Processor</xilinx:taxonomy>
        </xilinx:taxonomies>
      </xilinx:display>
    </xilinx:coreProperties>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2012.4.0</xilinx:xilinxVersion>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
